define(['dart_sdk', 'packages/flutter/src/services/system_channels.dart'], (function load__packages__location__location_dart(dart_sdk, packages__flutter__src__services__system_channels$46dart) {
  'use strict';
  const core = dart_sdk.core;
  const _js_helper = dart_sdk._js_helper;
  const async = dart_sdk.async;
  const dart = dart_sdk.dart;
  const dartx = dart_sdk.dartx;
  const platform_channel = packages__flutter__src__services__system_channels$46dart.src__services__platform_channel;
  const message_codecs = packages__flutter__src__services__system_channels$46dart.src__services__message_codecs;
  const message_codec = packages__flutter__src__services__system_channels$46dart.src__services__message_codec;
  var location = Object.create(dart.library);
  var $_get = dartx._get;
  var $toString = dartx.toString;
  dart._checkModuleNullSafetyMode(false);
  var T = {
    LocationAccuracyL: () => (T.LocationAccuracyL = dart.constFn(dart.legacy(location.LocationAccuracy)))(),
    PermissionStatusL: () => (T.PermissionStatusL = dart.constFn(dart.legacy(location.PermissionStatus)))(),
    StringL: () => (T.StringL = dart.constFn(dart.legacy(core.String)))(),
    numL: () => (T.numL = dart.constFn(dart.legacy(core.num)))(),
    IdentityMapOfStringL$numL: () => (T.IdentityMapOfStringL$numL = dart.constFn(_js_helper.IdentityMap$(T.StringL(), T.numL())))(),
    boolL: () => (T.boolL = dart.constFn(dart.legacy(core.bool)))(),
    dynamicToboolL: () => (T.dynamicToboolL = dart.constFn(dart.fnType(T.boolL(), [dart.dynamic])))(),
    doubleL: () => (T.doubleL = dart.constFn(dart.legacy(core.double)))(),
    MapOfStringL$doubleL: () => (T.MapOfStringL$doubleL = dart.constFn(core.Map$(T.StringL(), T.doubleL())))(),
    MapLOfStringL$doubleL: () => (T.MapLOfStringL$doubleL = dart.constFn(dart.legacy(T.MapOfStringL$doubleL())))(),
    LocationDataL: () => (T.LocationDataL = dart.constFn(dart.legacy(location.LocationData)))(),
    dynamicToPermissionStatusL: () => (T.dynamicToPermissionStatusL = dart.constFn(dart.fnType(T.PermissionStatusL(), [dart.dynamic])))(),
    dynamicToLocationDataL: () => (T.dynamicToLocationDataL = dart.constFn(dart.fnType(T.LocationDataL(), [dart.dynamic])))()
  };
  const CT = Object.create({
    _: () => (C, CT)
  });
  dart.defineLazy(CT, {
    get C0() {
      return C[0] = dart.const({
        __proto__: location.LocationAccuracy.prototype,
        [_name$]: "LocationAccuracy.POWERSAVE",
        index: 0
      });
    },
    get C1() {
      return C[1] = dart.const({
        __proto__: location.LocationAccuracy.prototype,
        [_name$]: "LocationAccuracy.LOW",
        index: 1
      });
    },
    get C2() {
      return C[2] = dart.const({
        __proto__: location.LocationAccuracy.prototype,
        [_name$]: "LocationAccuracy.BALANCED",
        index: 2
      });
    },
    get C3() {
      return C[3] = dart.const({
        __proto__: location.LocationAccuracy.prototype,
        [_name$]: "LocationAccuracy.HIGH",
        index: 3
      });
    },
    get C4() {
      return C[4] = dart.const({
        __proto__: location.LocationAccuracy.prototype,
        [_name$]: "LocationAccuracy.NAVIGATION",
        index: 4
      });
    },
    get C5() {
      return C[5] = dart.constList([C[0] || CT.C0, C[1] || CT.C1, C[2] || CT.C2, C[3] || CT.C3, C[4] || CT.C4], T.LocationAccuracyL());
    },
    get C6() {
      return C[6] = dart.const({
        __proto__: location.PermissionStatus.prototype,
        [_name$]: "PermissionStatus.GRANTED",
        index: 0
      });
    },
    get C7() {
      return C[7] = dart.const({
        __proto__: location.PermissionStatus.prototype,
        [_name$]: "PermissionStatus.DENIED",
        index: 1
      });
    },
    get C8() {
      return C[8] = dart.const({
        __proto__: location.PermissionStatus.prototype,
        [_name$]: "PermissionStatus.DENIED_FOREVER",
        index: 2
      });
    },
    get C9() {
      return C[9] = dart.constList([C[6] || CT.C6, C[7] || CT.C7, C[8] || CT.C8], T.PermissionStatusL());
    },
    get C12() {
      return C[12] = dart.const({
        __proto__: message_codecs.StandardMessageCodec.prototype
      });
    },
    get C11() {
      return C[11] = dart.const({
        __proto__: message_codecs.StandardMethodCodec.prototype,
        [StandardMethodCodec_messageCodec]: C[12] || CT.C12
      });
    },
    get C10() {
      return C[10] = dart.const({
        __proto__: platform_channel.MethodChannel.prototype,
        [MethodChannel__binaryMessenger]: null,
        [MethodChannel_codec]: C[11] || CT.C11,
        [MethodChannel_name]: "lyokone/location"
      });
    },
    get C13() {
      return C[13] = dart.const({
        __proto__: platform_channel.EventChannel.prototype,
        [EventChannel__binaryMessenger]: null,
        [EventChannel_codec]: C[11] || CT.C11,
        [EventChannel_name]: "lyokone/locationstream"
      });
    }
  }, false);
  var C = Array(14).fill(void 0);
  var I = ["package:location/location.dart"];
  var latitude$ = dart.privateName(location, "LocationData.latitude");
  var longitude$ = dart.privateName(location, "LocationData.longitude");
  var accuracy$ = dart.privateName(location, "LocationData.accuracy");
  var altitude$ = dart.privateName(location, "LocationData.altitude");
  var speed$ = dart.privateName(location, "LocationData.speed");
  var speedAccuracy$ = dart.privateName(location, "LocationData.speedAccuracy");
  var heading$ = dart.privateName(location, "LocationData.heading");
  var time$ = dart.privateName(location, "LocationData.time");
  location.LocationData = class LocationData extends core.Object {
    get latitude() {
      return this[latitude$];
    }
    set latitude(value) {
      super.latitude = value;
    }
    get longitude() {
      return this[longitude$];
    }
    set longitude(value) {
      super.longitude = value;
    }
    get accuracy() {
      return this[accuracy$];
    }
    set accuracy(value) {
      super.accuracy = value;
    }
    get altitude() {
      return this[altitude$];
    }
    set altitude(value) {
      super.altitude = value;
    }
    get speed() {
      return this[speed$];
    }
    set speed(value) {
      super.speed = value;
    }
    get speedAccuracy() {
      return this[speedAccuracy$];
    }
    set speedAccuracy(value) {
      super.speedAccuracy = value;
    }
    get heading() {
      return this[heading$];
    }
    set heading(value) {
      super.heading = value;
    }
    get time() {
      return this[time$];
    }
    set time(value) {
      super.time = value;
    }
    static fromMap(dataMap) {
      return new location.LocationData.__(dataMap[$_get]("latitude"), dataMap[$_get]("longitude"), dataMap[$_get]("accuracy"), dataMap[$_get]("altitude"), dataMap[$_get]("speed"), dataMap[$_get]("speed_accuracy"), dataMap[$_get]("heading"), dataMap[$_get]("time"));
    }
    toString() {
      return "LocationData<lat: " + dart.str(this.latitude) + ", long: " + dart.str(this.longitude) + ">";
    }
  };
  (location.LocationData.__ = function(latitude, longitude, accuracy, altitude, speed, speedAccuracy, heading, time) {
    this[latitude$] = latitude;
    this[longitude$] = longitude;
    this[accuracy$] = accuracy;
    this[altitude$] = altitude;
    this[speed$] = speed;
    this[speedAccuracy$] = speedAccuracy;
    this[heading$] = heading;
    this[time$] = time;
    ;
  }).prototype = location.LocationData.prototype;
  dart.addTypeTests(location.LocationData);
  dart.addTypeCaches(location.LocationData);
  dart.setMethodSignature(location.LocationData, () => ({
    __proto__: dart.getMethods(location.LocationData.__proto__),
    toString: dart.fnType(dart.legacy(core.String), []),
    [$toString]: dart.fnType(dart.legacy(core.String), [])
  }));
  dart.setLibraryUri(location.LocationData, I[0]);
  dart.setFieldSignature(location.LocationData, () => ({
    __proto__: dart.getFields(location.LocationData.__proto__),
    latitude: dart.finalFieldType(dart.legacy(core.double)),
    longitude: dart.finalFieldType(dart.legacy(core.double)),
    accuracy: dart.finalFieldType(dart.legacy(core.double)),
    altitude: dart.finalFieldType(dart.legacy(core.double)),
    speed: dart.finalFieldType(dart.legacy(core.double)),
    speedAccuracy: dart.finalFieldType(dart.legacy(core.double)),
    heading: dart.finalFieldType(dart.legacy(core.double)),
    time: dart.finalFieldType(dart.legacy(core.double))
  }));
  dart.defineExtensionMethods(location.LocationData, ['toString']);
  var _name$ = dart.privateName(location, "_name");
  location.LocationAccuracy = class LocationAccuracy extends core.Object {
    toString() {
      return this[_name$];
    }
  };
  (location.LocationAccuracy.new = function(index, _name) {
    this.index = index;
    this[_name$] = _name;
    ;
  }).prototype = location.LocationAccuracy.prototype;
  dart.addTypeTests(location.LocationAccuracy);
  dart.addTypeCaches(location.LocationAccuracy);
  dart.setMethodSignature(location.LocationAccuracy, () => ({
    __proto__: dart.getMethods(location.LocationAccuracy.__proto__),
    toString: dart.fnType(dart.legacy(core.String), []),
    [$toString]: dart.fnType(dart.legacy(core.String), [])
  }));
  dart.setLibraryUri(location.LocationAccuracy, I[0]);
  dart.setFieldSignature(location.LocationAccuracy, () => ({
    __proto__: dart.getFields(location.LocationAccuracy.__proto__),
    index: dart.finalFieldType(dart.legacy(core.int)),
    [_name$]: dart.finalFieldType(dart.legacy(core.String))
  }));
  dart.defineExtensionMethods(location.LocationAccuracy, ['toString']);
  location.LocationAccuracy.POWERSAVE = C[0] || CT.C0;
  location.LocationAccuracy.LOW = C[1] || CT.C1;
  location.LocationAccuracy.BALANCED = C[2] || CT.C2;
  location.LocationAccuracy.HIGH = C[3] || CT.C3;
  location.LocationAccuracy.NAVIGATION = C[4] || CT.C4;
  location.LocationAccuracy.values = C[5] || CT.C5;
  location.PermissionStatus = class PermissionStatus extends core.Object {
    toString() {
      return this[_name$];
    }
  };
  (location.PermissionStatus.new = function(index, _name) {
    this.index = index;
    this[_name$] = _name;
    ;
  }).prototype = location.PermissionStatus.prototype;
  dart.addTypeTests(location.PermissionStatus);
  dart.addTypeCaches(location.PermissionStatus);
  dart.setMethodSignature(location.PermissionStatus, () => ({
    __proto__: dart.getMethods(location.PermissionStatus.__proto__),
    toString: dart.fnType(dart.legacy(core.String), []),
    [$toString]: dart.fnType(dart.legacy(core.String), [])
  }));
  dart.setLibraryUri(location.PermissionStatus, I[0]);
  dart.setFieldSignature(location.PermissionStatus, () => ({
    __proto__: dart.getFields(location.PermissionStatus.__proto__),
    index: dart.finalFieldType(dart.legacy(core.int)),
    [_name$]: dart.finalFieldType(dart.legacy(core.String))
  }));
  dart.defineExtensionMethods(location.PermissionStatus, ['toString']);
  location.PermissionStatus.GRANTED = C[6] || CT.C6;
  location.PermissionStatus.DENIED = C[7] || CT.C7;
  location.PermissionStatus.DENIED_FOREVER = C[8] || CT.C8;
  location.PermissionStatus.values = C[9] || CT.C9;
  var _onLocationChanged = dart.privateName(location, "_onLocationChanged");
  var _methodChannel$ = dart.privateName(location, "_methodChannel");
  var _eventChannel$ = dart.privateName(location, "_eventChannel");
  var MethodChannel__binaryMessenger = dart.privateName(platform_channel, "MethodChannel._binaryMessenger");
  var StandardMethodCodec_messageCodec = dart.privateName(message_codecs, "StandardMethodCodec.messageCodec");
  var MethodChannel_codec = dart.privateName(platform_channel, "MethodChannel.codec");
  var MethodChannel_name = dart.privateName(platform_channel, "MethodChannel.name");
  var EventChannel__binaryMessenger = dart.privateName(platform_channel, "EventChannel._binaryMessenger");
  var EventChannel_codec = dart.privateName(platform_channel, "EventChannel.codec");
  var EventChannel_name = dart.privateName(platform_channel, "EventChannel.name");
  location.Location = class Location extends core.Object {
    static new() {
      if (location.Location._instance == null) {
        let methodChannel = C[10] || CT.C10;
        let eventChannel = C[13] || CT.C13;
        location.Location._instance = new location.Location.private(methodChannel, eventChannel);
      }
      return location.Location._instance;
    }
    changeSettings(opts) {
      let accuracy = opts && 'accuracy' in opts ? opts.accuracy : C[3] || CT.C3;
      let interval = opts && 'interval' in opts ? opts.interval : 1000;
      let distanceFilter = opts && 'distanceFilter' in opts ? opts.distanceFilter : 0;
      return this[_methodChannel$].invokeMethod(dart.dynamic, "changeSettings", new (T.IdentityMapOfStringL$numL()).from(["accuracy", accuracy.index, "interval", interval, "distanceFilter", distanceFilter])).then(T.boolL(), dart.fn(result => dart.equals(result, 1), T.dynamicToboolL()));
    }
    getLocation() {
      return async.async(T.LocationDataL(), (function* getLocation() {
        let resultMap = T.MapLOfStringL$doubleL().as(dart.dgsend(yield this[_methodChannel$].invokeMethod(dart.dynamic, "getLocation"), [T.StringL(), T.doubleL()], 'cast', []));
        return location.LocationData.fromMap(resultMap);
      }).bind(this));
    }
    hasPermission() {
      return this[_methodChannel$].invokeMethod(dart.dynamic, "hasPermission").then(T.PermissionStatusL(), dart.fn(result => {
        switch (result) {
          case 0:
          {
            return location.PermissionStatus.DENIED;
            break;
          }
          case 1:
          {
            return location.PermissionStatus.GRANTED;
            break;
          }
          case 2:
          {
            return location.PermissionStatus.DENIED_FOREVER;
          }
          default:
          {
            dart.throw(new message_codec.PlatformException.new({code: "UNKNOWN_NATIVE_MESSAGE"}));
          }
        }
      }, T.dynamicToPermissionStatusL()));
    }
    requestPermission() {
      return this[_methodChannel$].invokeMethod(dart.dynamic, "requestPermission").then(T.PermissionStatusL(), dart.fn(result => {
        switch (result) {
          case 0:
          {
            return location.PermissionStatus.DENIED;
            break;
          }
          case 1:
          {
            return location.PermissionStatus.GRANTED;
            break;
          }
          case 2:
          {
            return location.PermissionStatus.DENIED_FOREVER;
          }
          default:
          {
            dart.throw(new message_codec.PlatformException.new({code: "UNKNOWN_NATIVE_MESSAGE"}));
          }
        }
      }, T.dynamicToPermissionStatusL()));
    }
    serviceEnabled() {
      return this[_methodChannel$].invokeMethod(dart.dynamic, "serviceEnabled").then(T.boolL(), dart.fn(result => dart.equals(result, 1), T.dynamicToboolL()));
    }
    requestService() {
      return this[_methodChannel$].invokeMethod(dart.dynamic, "requestService").then(T.boolL(), dart.fn(result => dart.equals(result, 1), T.dynamicToboolL()));
    }
    onLocationChanged() {
      if (this[_onLocationChanged] == null) {
        this[_onLocationChanged] = this[_eventChannel$].receiveBroadcastStream().map(T.LocationDataL(), dart.fn(element => location.LocationData.fromMap(T.MapLOfStringL$doubleL().as(dart.dgsend(element, [T.StringL(), T.doubleL()], 'cast', []))), T.dynamicToLocationDataL()));
      }
      return this[_onLocationChanged];
    }
  };
  (location.Location.private = function(_methodChannel, _eventChannel) {
    this[_onLocationChanged] = null;
    this[_methodChannel$] = _methodChannel;
    this[_eventChannel$] = _eventChannel;
    ;
  }).prototype = location.Location.prototype;
  dart.addTypeTests(location.Location);
  dart.addTypeCaches(location.Location);
  dart.setMethodSignature(location.Location, () => ({
    __proto__: dart.getMethods(location.Location.__proto__),
    changeSettings: dart.fnType(dart.legacy(async.Future$(dart.legacy(core.bool))), [], {accuracy: dart.legacy(location.LocationAccuracy), distanceFilter: dart.legacy(core.double), interval: dart.legacy(core.int)}, {}),
    getLocation: dart.fnType(dart.legacy(async.Future$(dart.legacy(location.LocationData))), []),
    hasPermission: dart.fnType(dart.legacy(async.Future$(dart.legacy(location.PermissionStatus))), []),
    requestPermission: dart.fnType(dart.legacy(async.Future$(dart.legacy(location.PermissionStatus))), []),
    serviceEnabled: dart.fnType(dart.legacy(async.Future$(dart.legacy(core.bool))), []),
    requestService: dart.fnType(dart.legacy(async.Future$(dart.legacy(core.bool))), []),
    onLocationChanged: dart.fnType(dart.legacy(async.Stream$(dart.legacy(location.LocationData))), [])
  }));
  dart.setLibraryUri(location.Location, I[0]);
  dart.setFieldSignature(location.Location, () => ({
    __proto__: dart.getFields(location.Location.__proto__),
    [_methodChannel$]: dart.finalFieldType(dart.legacy(platform_channel.MethodChannel)),
    [_eventChannel$]: dart.finalFieldType(dart.legacy(platform_channel.EventChannel)),
    [_onLocationChanged]: dart.fieldType(dart.legacy(async.Stream$(dart.legacy(location.LocationData))))
  }));
  dart.defineLazy(location.Location, {
    /*location.Location._instance*/get _instance() {
      return null;
    },
    set _instance(_) {}
  }, true);
  dart.trackLibraries("packages/location/location.dart", {
    "package:location/location.dart": location
  }, {
  }, '{"version":3,"sourceRoot":"","sources":["location.dart"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAUe;;;;;;IAGA;;;;;;IAGA;;;;;;IAGA;;;;;;IAGA;;;;;;IAGA;;;;;;IAGA;;;;;;IAGA;;;;;;mBAKoC;AAC/C,YAAoB,8BAClB,AAAO,OAAA,QAAC,aACR,AAAO,OAAA,QAAC,cACR,AAAO,OAAA,QAAC,aACR,AAAO,OAAA,QAAC,aACR,AAAO,OAAA,QAAC,UACR,AAAO,OAAA,QAAC,mBACR,AAAO,OAAA,QAAC,YACR,AAAO,OAAA,QAAC;IAEZ;;AAIE,YAAO,AAAgD,iCAA5B,iBAAQ,sBAAS,kBAAS;IACvD;;uCAnBoB,UAAe,WAAgB,UAAe,UACzD,OAAY,eAAoB,SAAc;IADnC;IAAe;IAAgB;IAAe;IACzD;IAAY;IAAoB;IAAc;;EAAK;;;;;;;;;;;;;;;;;;;;;;;;;IAwC9D;;mDAfK;;;;EAeL;;;;;;;;;;;;;;;;;;;;;;;;IAYA;;mDATK;;;;EASL;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAKI,UAAI,AAAU;AACQ;AAED;AAEsC,QAAzD,8BAAqB,8BAAQ,aAAa,EAAE,YAAY;;AAE1D,YAAO;IACT;;UAoB0B;UACd;UACG;AACX,YAAA,AAAe,AAIZ,kDAJyB,kBAAkB,0CAC5C,YAAY,AAAS,QAAD,QACpB,YAAY,QAAQ,EACpB,kBAAkB,cAAc,oBAC1B,QAAC,UAAkB,YAAP,MAAM,EAAI;IAAE;;AAMJ;AACV,qDAEX,YADJ,MAAM,AAAe,iDAAa;AAEvC,cAAoB,+BAAQ,SAAS;MACvC;;;AAQI,YAAA,AAAe,AAA8B,kDAAjB,6CAAsB,QAAC;AACjD,gBAAQ,MAAM;;;AAEV,kBAAwB;AACxB;;;;AAEA,kBAAwB;AACxB;;;;AAEA,kBAAwB;;;;AAE+B,YAAvD,WAAM,+CAAwB;;;;IAElC;;AAQF,YAAA,AAAe,AAAkC,kDAArB,iDAA0B,QAAC;AACrD,gBAAQ,MAAM;;;AAEV,kBAAwB;AACxB;;;;AAEA,kBAAwB;AACxB;;;;AAEA,kBAAwB;;;;AAE+B,YAAvD,WAAM,+CAAwB;;;;IAElC;;AAG2B,YAAA,AAC5B,AACA,kDADa,kCACR,QAAC,UAAkB,YAAP,MAAM,EAAI;IAAE;;AAGD,YAAA,AAC5B,AACA,kDADa,kCACR,QAAC,UAAkB,YAAP,MAAM,EAAI;IAAE;;AAOhC,UAAI,AAAmB;AAIwC,QAH7D,2BAAqB,AAChB,AACA,qEAAkB,QAAC,WACH,2DAAgB,YAAR,OAAO;;AAEtC,YAAO;IACT;;wCAnGsB,gBAAqB;IAOtB;IAPC;IAAqB;;EAAc;;;;;;;;;;;;;;;;;;;;;MAEzC,2BAAS","file":"../../../../../../../../../../../D:/packages/location/location.dart.lib.js"}');
  // Exports:
  return {
    location: location
  };
}));

//# sourceMappingURL=location.dart.lib.js.map
